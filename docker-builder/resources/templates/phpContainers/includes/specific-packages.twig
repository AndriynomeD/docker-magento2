{% if specificPackages.gd is defined and specificPackages.gd != false %}
###########################################################################
# Configure the gd library
###########################################################################

RUN docker-php-ext-configure \
{% if version_compare(phpVersion, '7.4', '>=') %}
  gd --prefix=/usr --with-freetype --with-jpeg \
{% else %}
  gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
{% endif %}
  && docker-php-ext-install gd

{% endif %}
{# imagick can be false|true|{imagick_version} #}
{% if specificPackages.imagick is defined and specificPackages.imagick != false %}
###########################################################################
# Imagemagick (copy from https://github.com/laradock/laradock/blob/master/php-fpm/Dockerfile):
###########################################################################

ARG INSTALL_IMAGEMAGICK={{ specificPackages.imagick != false ? 'true' : 'false' }}
ARG IMAGEMAGICK_VERSION={{ (specificPackages.imagick != true) ? specificPackages.imagick : 'latest' }}
ENV IMAGEMAGICK_VERSION=${IMAGEMAGICK_VERSION}

RUN if [ ${INSTALL_IMAGEMAGICK} = true ]; then \
    apt-get update && \
    apt-get install -yqq libmagickwand-dev imagemagick && \
    if [ $(php -r "echo PHP_MAJOR_VERSION;") = "8" ]; then \
      cd /tmp && \
      if [ ${IMAGEMAGICK_VERSION} = "latest" ]; then \
        if [ "$PHP_VERSION" = "8.4" ]; then \
          git clone --branch develop https://github.com/Imagick/imagick; \
        else \
          git clone https://github.com/Imagick/imagick; \
        fi; \
      else \
        git clone --branch ${IMAGEMAGICK_VERSION} https://github.com/Imagick/imagick; \
      fi && \
      cd imagick && \
      phpize && \
      ./configure && \
      make && \
      make install && \
      rm -r /tmp/imagick; \
    else \
      pecl install imagick; \
    fi && \
    docker-php-ext-enable imagick; \
    php -m | grep -q 'imagick' \
;fi

{% endif %}
{% if specificPackages.ioncube is defined and specificPackages.ioncube != false %}
###########################################################################
# IonCube Loader (copy from https://github.com/laradock/laradock/blob/master/php-fpm/Dockerfile):
###########################################################################

ARG $PHP_INI_DIR=/usr/local/etc/php
ARG INSTALL_IONCUBE={{ specificPackages.ioncube != false ? 'true' : 'false' }}

RUN if [ ${INSTALL_IONCUBE} = true ]; then \
    if [ ${PHP_VERSION} != "8.4" ] \
      && [ ${PHP_VERSION} != "8.0" ]; then \
      # Install the php ioncube loader
      curl -L -o /tmp/ioncube_loaders_lin_x86-64.tar.gz https://downloads.ioncube.com/loader_downloads/ioncube_loaders_lin_x86-64.tar.gz \
      && tar zxpf /tmp/ioncube_loaders_lin_x86-64.tar.gz -C /tmp \
      && mv /tmp/ioncube/ioncube_loader_lin_${PHP_VERSION}.so $(php -r "echo ini_get('extension_dir');")/ioncube_loader.so \
      && printf "zend_extension=ioncube_loader.so\n" > $PHP_INI_DIR/conf.d/0ioncube.ini \
      && rm -rf /tmp/ioncube* \
      && php -m | grep -oiE '^ionCube Loader$' \
    ;fi \
;fi

{% endif %}
{% if specificPackages.calendar is defined and specificPackages.calendar != false %}
###########################################################################
# Calendar (copy from https://github.com/laradock/laradock/blob/master/php-fpm/Dockerfile):
###########################################################################

ARG INSTALL_CALENDAR={{ specificPackages.calendar != false ? 'true' : 'false' }}

RUN if [ ${INSTALL_CALENDAR} = true ]; then \
    docker-php-ext-configure calendar && \
    docker-php-ext-install calendar \
;fi

{% endif %}
{% if specificPackages.libsodiumfix is defined and specificPackages.libsodiumfix != false %}
###########################################################################
# Fix bug: libsodium 1.0.13 or higher required for Magento 2.3.2 but newest version 1.0.11
###########################################################################
RUN echo "deb http://deb.debian.org/debian stretch-backports main" >> /etc/apt/sources.list
RUN apt-get update && apt-get -t stretch-backports install -y \
  libsodium-dev
RUN pecl install -f libsodium-1.0.17 && rm -rf /tmp/pear

{% endif %}
